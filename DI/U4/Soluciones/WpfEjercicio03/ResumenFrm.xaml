<Window x:Class="WpfEjercicio03.ResumenFrm"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfEjercicio03"
        mc:Ignorable="d"
        Title="Resumen evento" Height="279.044" Width="586.03" ResizeMode="CanResizeWithGrip">
    <Window.Resources>

        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="Red"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="OrangeRed"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="resaltar" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>
    <DockPanel Margin="5">
        <Grid DockPanel.Dock="Bottom" Height="Auto">
            <Button x:Name="btnAceptar" Content="Cancelar" IsDefault="True" Height="20" Width="75" HorizontalAlignment="Right" Click="btnAceptar_Click" Style="{DynamicResource resaltar}" ></Button>
            <Button x:Name="btnCancelar" Content="Aceptar" IsCancel="True" Height="20" Width="75" HorizontalAlignment="Right" Margin="0,9,80,9" Click="btnCancelar_Click"/>
        </Grid>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="2*"/>
            </Grid.RowDefinitions>
            <Label Content="Nombre:" HorizontalAlignment="Right" VerticalAlignment="Top"/>
            <TextBox x:Name="txtNombre" IsReadOnly="True" Grid.Column="1" Grid.Row="0" Grid.ColumnSpan="3" VerticalAlignment="Top"/>

            <Label Content="Fecha:" HorizontalAlignment="Right" Grid.Row="1" VerticalAlignment="Top"/>
            <DatePicker x:Name="dpFecha" Grid.Column="1" Grid.Row="1" IsEnabled="False" VerticalAlignment="Top"/>

            <Label Content="Hora:" HorizontalAlignment="Right" Grid.Column="2" Grid.Row="1" VerticalAlignment="Top"/>
            <TextBox x:Name="txtHora" IsReadOnly="True" Grid.Column="3" Grid.Row="1" VerticalAlignment="Top" />

            <Label Content="Aforo:" HorizontalAlignment="Right" Grid.Row="2" VerticalAlignment="Top"/>
            <TextBox x:Name="txtAforo" Grid.Column="1" Grid.Row="2" IsReadOnly="True" VerticalAlignment="Top"/>

            <Label Content="Promotor:" HorizontalAlignment="Right" Grid.Column="2" Grid.Row="2" VerticalAlignment="Top"/>
            <TextBox x:Name="txtPromotor" IsReadOnly="True" Grid.Column="3" Grid.Row="2" VerticalAlignment="Top" />

            <Label Content="Tipo:" Grid.Row="3" HorizontalAlignment="Right" VerticalAlignment="Top"/>
            <TextBox x:Name="txtTipo" Grid.Column="1" Grid.Row="3" Grid.ColumnSpan="3" VerticalAlignment="Top"/>

            <Label Content="Requisitos:" Grid.Row="4" HorizontalAlignment="Right" VerticalAlignment="Top"/>
            <TextBlock x:Name="tbRequisitos" Grid.Column="1" Grid.Row="4" Grid.ColumnSpan="3" VerticalAlignment="Top"/>

            <Label Content="Descripción: " Grid.Row="5" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
            <TextBox x:Name="txtDescripcion" Grid.Row="6" Grid.ColumnSpan="4" VerticalAlignment="Stretch" AcceptsReturn="True" TextWrapping="Wrap" IsReadOnly="True"/>
        </Grid>
    </DockPanel>
</Window>
